import{_ as a,c as i,o as e,ak as t}from"./chunks/framework.DALqws9A.js";const c=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[],"relativePath":"getting-started.md","filePath":"getting-started.md"}'),n={name:"getting-started.md"};function l(p,s,h,o,d,r){return e(),i("div",null,[...s[0]||(s[0]=[t(`<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p><strong>Kaelum.JS</strong> is a minimalist Node.js framework that wraps and simplifies common Express.js patterns. It aims to reduce boilerplate and accelerate learning for students and developers by providing:</p><ul><li>a tiny public API (<code>kaelum()</code>, <code>app.addRoute()</code>, <code>app.start()</code>),</li><li>a CLI to scaffold projects (<code>npx kaelum create</code>),</li><li>sensible defaults (body parsing, static serving, optional security middleware),</li><li>templates for Web apps and REST APIs.</li></ul><p>Kaelum acts as a thin ergonomic layer over Express so you keep full flexibility while removing repetitive setup.</p><p>The name <strong>Kaelum</strong> is a modern take on the Latin word <strong>&quot;Caelum,&quot;</strong> meaning &quot;sky&quot; or &quot;heavens.&quot; Inspired by the idea of a vast and open horizon, Kaelum was conceived as a flexible and uncluttered foundation for your projects.</p><p>For a deeper understanding of the project&#39;s motivations, see the <a href="./philosophy.html">Philosophy</a> and/or <a href="./why-kaelum.html">Why Kaelum?</a> section.</p><h2 id="scaffolding-your-first-kaelum-project" tabindex="-1">Scaffolding your First Kaelum Project <a class="header-anchor" href="#scaffolding-your-first-kaelum-project" aria-label="Permalink to &quot;Scaffolding your First Kaelum Project&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">SUPPORTED ENVIRONMENT</p><p>Kaelum targets modern Node.js versions. For development and production, we recommend:</p><ul><li><a href="https://nodejs.org/en/" target="_blank" rel="noreferrer">Node.js</a> <strong>16.x</strong> or <strong>18.x</strong> (LTS versions).</li><li>npm 8+ or an equivalent package manager (yarn, pnpm).</li></ul><blockquote><p>Note: If you need to support older Node.js versions, test locally and pin dependencies accordingly.</p></blockquote></div><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="NPM">NPM</span></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kaelum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span></span></code></pre></div></div><ul><li>follow prompts: project name -&gt; choose template (web | api)</li></ul><p>This command copies a minimal template into <code>./&lt;project-name&gt;</code> with a ready-to-run project structure (MVC-ish) and example files.</p><details class="details custom-block"><summary>Using kaelum create with command line options</summary><p>You can also specify the project name and template using additional command line options. For example, to scaffold a Kaelum web app, run:</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="npm">npm</span></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kaelum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --template</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> web</span></span></code></pre></div></div></details><p>After scaffolding:</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="NPM">NPM</span></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-project</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div></div><p>The generated project includes:</p><ul><li><code>app.js</code> — example usage of Kaelum helpers,</li><li><code>routes.js</code> — where example routes call <code>app.addRoute(...)</code>,</li><li><code>public/</code> and <code>views/</code> for static and template files (web template),</li><li><code>controllers/</code> and <code>middlewares/</code> directories for user code.</li></ul><h2 id="manual-installation" tabindex="-1">Manual Installation <a class="header-anchor" href="#manual-installation" aria-label="Permalink to &quot;Manual Installation&quot;">​</a></h2><p>If you prefer to add Kaelum to an existing Node project:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kaelum</span></span></code></pre></div><p>Then create <code>app.js</code>:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> kaelum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;kaelum&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kaelum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello from Kaelum!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre></div><h2 id="index-html-and-project-root-what-the-scaffolder-creates" tabindex="-1">Index.html and Project Root (What the scaffolder creates) <a class="header-anchor" href="#index-html-and-project-root-what-the-scaffolder-creates" aria-label="Permalink to &quot;Index.html and Project Root (What the scaffolder creates)&quot;">​</a></h2><p>The scaffolder generates a small project layout (web template):</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span>my-web-app/</span></span>
<span class="line"><span>├── public/          # static assets (css, images)</span></span>
<span class="line"><span>│   └── style.css</span></span>
<span class="line"><span>├── views/           # html templates</span></span>
<span class="line"><span>│   └── index.html</span></span>
<span class="line"><span>├── controllers/</span></span>
<span class="line"><span>│   └── .gitkeep</span></span>
<span class="line"><span>├── middlewares/</span></span>
<span class="line"><span>│   └── .gitkeep</span></span>
<span class="line"><span>├── routes.js</span></span>
<span class="line"><span>├── app.js</span></span>
<span class="line"><span>└── package.json</span></span></code></pre></div><p>The <code>app.js</code> generated demonstrates <code>app.addRoute()</code>, a sample middleware and <code>app.start()</code>. It is intentionally minimal so beginners can inspect each file quickly.</p><h2 id="command-line-interface-cli" tabindex="-1">Command Line Interface (CLI) <a class="header-anchor" href="#command-line-interface-cli" aria-label="Permalink to &quot;Command Line Interface (CLI)&quot;">​</a></h2><p>When you run <code>npx kaelum create</code>, the CLI asks:</p><ol><li><strong>Project name</strong> — name of the new folder to create.</li><li><strong>Template</strong> — <code>web</code> (default) or <code>api</code> (API template scaffolds controller &amp; route examples).</li></ol><p>After the copy completes you get an instruction message with the commands:</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span>✅ Project &quot;my-web-app&quot; created!</span></span>
<span class="line"><span>➡️ cd my-web-app</span></span>
<span class="line"><span>➡️ npm install &amp;&amp; npm start</span></span></code></pre></div><blockquote><p>Tip: During development you can <code>npm link</code> inside the local Kaelum repo and test <code>npx kaelum create</code> without publishing to npm.</p></blockquote><h2 id="example-minimal-kaelum-app-js" tabindex="-1">Example: Minimal Kaelum <code>app.js</code> <a class="header-anchor" href="#example-minimal-kaelum-app-js" aria-label="Permalink to &quot;Example: Minimal Kaelum \`app.js\`&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// app.js (minimal)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> kaelum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;kaelum&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kaelum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello from Kaelum!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Short explanation:</p><ul><li><code>kaelum()</code> returns an Express-backed app with Kaelum helpers attached.</li><li><code>app.addRoute(path, handlers)</code> accepts either a function (GET) or an object <code>{ get, post, put, ... }</code>.</li><li><code>app.start(port)</code> starts the server; if you prefer, <code>app.setConfig({ port: 3000 })</code> can persist the port.</li></ul><h2 id="community-templates-advanced-scaffolding" tabindex="-1">Community Templates &amp; Advanced Scaffolding <a class="header-anchor" href="#community-templates-advanced-scaffolding" aria-label="Permalink to &quot;Community Templates &amp; Advanced Scaffolding&quot;">​</a></h2><p>Kaelum templates are simple folders under the CLI&#39;s <code>templates/</code> directory. In the future we plan to support community templates and configuration choices (e.g., TypeScript, Dockerfile scaffolding).</p><h2 id="where-to-go-next" tabindex="-1">Where to go next <a class="header-anchor" href="#where-to-go-next" aria-label="Permalink to &quot;Where to go next&quot;">​</a></h2><ul><li>Read <a href="./guides/features.html">Features</a> for in-depth examples of <code>setConfig()</code>, <code>apiRoute()</code>, <code>static()</code>, <code>redirect()</code> and error handling.</li><li>Read <a href="./philosophy.html">Philosophy</a> to learn why we built Kaelum and the meaning behind the name.</li><li>Explore <a href="./api/start.html">API</a> to view function signatures and examples for each core helper.</li></ul>`,42)])])}const g=a(n,[["render",l]]);export{c as __pageData,g as default};
